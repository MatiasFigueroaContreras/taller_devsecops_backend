version: "3.8"
services:
  nginx:
      image: nginx:latest
      container_name: nginx-proxy
      restart: always
      ports:
        - "80:80"
      volumes:
        - ./nginx/conf.d:/etc/nginx/conf.d
      depends_on:
        - app1
        - app2
        - app3

  postgres-db:
    image: postgres
    restart: always
    volumes:
      - ./pgdata:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: milkstgo
    ports:
      - "5432:5432"

  app1:
    container_name: milkstgo1
    image: matiasfc/milkstgo # Actualizar
    depends_on:
      - postgres-db
    ports:
      - "8091:8090"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/milkstgo
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
    deploy:
      restart_policy:
        condition: on-failure

  app2:
    container_name: milkstgo2
    image: matiasfc/milkstgo # Actualizar
    depends_on:
      - postgres-db
    ports:
      - "8092:8090"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/milkstgo
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
    deploy:
      restart_policy:
        condition: on-failure

  app3:
    container_name: milkstgo3
    image: matiasfc/milkstgo # Actualizar
    depends_on:
      - postgres-db
    ports:
      - "8093:8090"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/milkstgo
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
    deploy:
      restart_policy:
        condition: on-failure