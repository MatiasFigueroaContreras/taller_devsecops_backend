pipeline {
    agent any

    environment {
        GITHUB_CREDENTIALS = 'devsecops' //Cambiar al token propio en la interfaz de jenkins
        GIT_REPO = 'https://github.com/MatiasFigueroaContreras/taller_devsecops_backend.git'
        SEMGREP_APP_TOKEN = credentials('Semgrep') //Cambiar a las llaves creadas en la pág de semgrep
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: '*/develop']],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [
                            [
                                $class: 'CloneOption',
                                depth: 1,
                                noTags: false,
                                reference: '',
                                shallow: true
                            ]
                        ],
                        userRemoteConfigs: [
                            [
                                credentialsId: "${env.GITHUB_CREDENTIALS}",
                                url: "${env.GIT_REPO}"
                            ]
                        ]
                    ])
                }
            }
        }

        stage('Análisis Estático con Semgrep') {
            steps {
                script {
                    bat """
                    docker run -e SEMGREP_APP_TOKEN=${env.SEMGREP_APP_TOKEN} --rm -v "%cd%:/src" semgrep/semgrep semgrep ci --json --output /src/semgrep_report.json
                    """
                }
            }
        }

        stage('Archivar Reporte Semgrep') {
            steps {
                archiveArtifacts artifacts: '**/semgrep_report.json', allowEmptyArchive: true
            }
        }
    }

    post {
        always {
            echo 'Pipeline Backend ejecutado'
        }
    }
}